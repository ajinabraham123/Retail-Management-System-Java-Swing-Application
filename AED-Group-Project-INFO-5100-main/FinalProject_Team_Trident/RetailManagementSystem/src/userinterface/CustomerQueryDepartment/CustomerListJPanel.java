/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerQueryDepartment;

import Model.EcoSystem;
import Model.Enterprise.Enterprise;
import Model.RetailEmployment.Agent;
import Model.RetailEmployment.AgentList;
import Model.RetailEmployment.Customer;
import Model.RetailEmployment.CustomerList;
import Model.Location.Location;
import Model.Organization.AgentOrganization;
import Model.Organization.Organization;
import Model.Organization.CustomerOrganization;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.AgentWorkRequest;
import Model.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import userinterface.Customer.CustomerWorkAreaJPanel;
import userinterface.SystemAdminWorkArea.SystemAdminWorkAreaJPanel;

/**
 *
 * @author siddhisawant
 */
public class CustomerListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerListJPanel
     */
    CustomerList customerList;
    AgentList agentList;
    EcoSystem ecoSystem;
    JPanel userProcessContainer;
    Location network;
    Organization organization ;
    private static Logger log = Logger.getLogger(CustomerListJPanel.class);
    private static final String CLASS_NAME = CustomerListJPanel.class.getName();
    public CustomerListJPanel(JPanel userProcessContainer,Location network, Organization organization ,EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.customerList = ecoSystem.getCustomerDirectory();
        this.agentList = ecoSystem.getAgentDirectory();
        this.network = network;
        this.organization = organization;
        populateTable();
        populateDocTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        btnCreateCustomer = new javax.swing.JButton();
        btnUpdateCustomer = new javax.swing.JButton();
        btnDeleteCustomer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAgent = new javax.swing.JTable();
        btnCreateAgent = new javax.swing.JButton();
        btnUpdateCustomer1 = new javax.swing.JButton();
        btnDeleteCustomer1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(153, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("CUSTOMER QUERY DEPARTMENT ADMIN WORK AREA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, 26));

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "FullName", "PhoneNumber", "EmailAddress", "BirthDate", "Address", "UserName"
            }
        ));
        jScrollPane1.setViewportView(tblCustomer);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 97, 649, 133));

        btnCreateCustomer.setText("Create Customer");
        btnCreateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCustomerActionPerformed(evt);
            }
        });
        add(btnCreateCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 261, 184, -1));

        btnUpdateCustomer.setText("View Customer Info");
        btnUpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCustomerActionPerformed(evt);
            }
        });
        add(btnUpdateCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(357, 261, 184, -1));

        btnDeleteCustomer.setText("Delete Customer");
        btnDeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustomerActionPerformed(evt);
            }
        });
        add(btnDeleteCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(547, 261, 184, -1));

        tblAgent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "FullName", "Qualification", "Specilization", "UserName"
            }
        ));
        jScrollPane2.setViewportView(tblAgent);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 362, 649, 133));

        btnCreateAgent.setText("Create Agent");
        btnCreateAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAgentActionPerformed(evt);
            }
        });
        add(btnCreateAgent, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 513, 184, -1));

        btnUpdateCustomer1.setText("Modify or View Agent");
        btnUpdateCustomer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCustomer1ActionPerformed(evt);
            }
        });
        add(btnUpdateCustomer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 513, -1, -1));

        btnDeleteCustomer1.setText("Delete Agent");
        btnDeleteCustomer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustomer1ActionPerformed(evt);
            }
        });
        add(btnDeleteCustomer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(547, 513, 184, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 325, 790, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCustomerActionPerformed
        // TODO add your handling code here:
        CreateCustomerJPanel createPatient = new CreateCustomerJPanel(userProcessContainer, ecoSystem, customerList, network);
        userProcessContainer.add("CreatePatientJPanel",createPatient);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnCreateCustomerActionPerformed

    private void btnUpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCustomerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomer.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first");
            return;
        }
        Customer patient = (Customer)tblCustomer.getValueAt(selectedRow,0);
        CreateCustomerJPanel modifyPatient = new CreateCustomerJPanel(userProcessContainer, ecoSystem, customerList, patient,network);
        userProcessContainer.add("ModifyCustomerJPanel",modifyPatient);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnUpdateCustomerActionPerformed

    private void btnDeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustomerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomer.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Customer customer = (Customer) tblCustomer.getValueAt(selectedRow, 0);
        customerList.removeCustomer(customer);
        populateTable();
    }//GEN-LAST:event_btnDeleteCustomerActionPerformed

    private void btnCreateAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAgentActionPerformed
        // TODO add your handling code here:
         CreateAgentJPanel createAgent = new CreateAgentJPanel(userProcessContainer, ecoSystem, agentList, network);
        userProcessContainer.add("CreatePatientJPanel",createAgent);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnCreateAgentActionPerformed

    private void btnUpdateCustomer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCustomer1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAgent.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first");
            return;
        }
        Agent agent = (Agent)tblAgent.getValueAt(selectedRow,0);
        CreateAgentJPanel createDoctor = new CreateAgentJPanel(userProcessContainer, ecoSystem, agentList, network,agent);
        userProcessContainer.add("CreatePatientJPanel",createDoctor);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnUpdateCustomer1ActionPerformed

    private void btnDeleteCustomer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustomer1ActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblAgent.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }
         Agent agentSelected = (Agent) tblAgent.getValueAt(selectedRow, 0);
         Organization agentOrg = null;
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList())
        {
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
               if (organization instanceof AgentOrganization ) {

                   agentOrg = organization;
                   break;
               }
           }
        }

            for(Agent agent : agentList.getAgentList())
            {
                String UserName = "" ;
                String Password = ""; 
                for(UserAccount useraccount : agentOrg.getUserAccountDirectory().getUserAccountList())
                {
                    if(useraccount.getEmployee().getName().equals(agentSelected.getAgentName()))
                    {
                        if(useraccount.getWorkQueue().getWorkRequestList().size() > 0)
                        {
                             JOptionPane.showMessageDialog(null,"There is already request assigned to this Agent, So Agent won't delete");
                             return;
                        }
                    }
                }
            }
        
        
        
        
        
//        for (WorkRequest wr : account.getWorkQueue().getWorkRequestList()) {
//            if(wr instanceof AgentWorkRequest) {
//                
//                AgentWorkRequest epr = (AgentWorkRequest)wr;

       
        agentList.removeAgent(agentSelected);
        populateDocTable();
    }//GEN-LAST:event_btnDeleteCustomer1ActionPerformed

    
    
    public void populateTable()
    {
        DefaultTableModel patientModel = (DefaultTableModel) tblCustomer.getModel();
        patientModel.setRowCount(0);
        
        for(Customer customer : customerList.getCustomerList())
        {
            String UserName = "" ;
            String Password = ""; 
             Organization customerOrg = null;
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList())
        {
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
               if (organization instanceof CustomerOrganization) {

                   customerOrg = organization;
                   break;
               }
           }
        }
            for(UserAccount useraccount : customerOrg.getUserAccountDirectory().getUserAccountList())
            {
                if(useraccount.getEmployee().getName().equals(customer.getCustomerName()))
                {
                    System.out.println(useraccount);
                    UserName = useraccount.getUsername();
                    Password = useraccount.getUsername();
                }
            }
            //for()
            Object [] row = new Object[6];
            row[0] = customer;
            row[1] = customer.getPhoneNumber();
            row[2] = customer.getEmailAddress();
            row[3] = customer.getBirthDate();
            row[4] = customer.getAddress();
            row[5] = customer.getUserName();
           
            patientModel.addRow(row);
        }
    }
    
    public void populateDocTable()
    {
        try{
            log.info("Receptionist Panel Opening");
            DefaultTableModel patientModel = (DefaultTableModel) tblAgent.getModel();
            patientModel.setRowCount(0);
            
             Organization customerOrg = null;
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList())
        {
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
               if (organization instanceof AgentOrganization ) {

                   customerOrg = organization;
                   break;
               }
           }
        }

            for(Agent agent : agentList.getAgentList())
            {
                String UserName = "" ;
                String Password = ""; 
                for(UserAccount useraccount : customerOrg.getUserAccountDirectory().getUserAccountList())
                {
                    if(useraccount.getEmployee().getName().equals(agent.getAgentName()))
                    {
                        UserName = useraccount.getUsername();
                        Password = useraccount.getUsername();
                    }
                }
                //for()
                Object [] row = new Object[4];
                row[0] = agent;
                row[1] = agent.getQualification();
                row[2] = agent.getSpecilizationName();
                row[3] = UserName;

                patientModel.addRow(row);
            }
        }
        catch(Exception e)
        {
            log.error(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateAgent;
    private javax.swing.JButton btnCreateCustomer;
    private javax.swing.JButton btnDeleteCustomer;
    private javax.swing.JButton btnDeleteCustomer1;
    private javax.swing.JButton btnUpdateCustomer;
    private javax.swing.JButton btnUpdateCustomer1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblAgent;
    private javax.swing.JTable tblCustomer;
    // End of variables declaration//GEN-END:variables
}
